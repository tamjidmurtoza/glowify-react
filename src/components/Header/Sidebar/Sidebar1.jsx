import React, { useState } from "react";
import Spacing from "../../Spacing";
import Review from "../../Review";

const Sidebar1 = ({ data, variant, bgColor }) => {
  const [showSidebar, setShowSidebar] = useState(false);
  const [selectedCategories, setSelectedCategories] = useState([]);
  const [openCategories, setOpenCategories] = useState([]);

  const handleCheckboxChange = (category) => {
    setSelectedCategories((prev) =>
      prev.includes(category)
        ? prev.filter((cat) => cat !== category)
        : [...prev, category]
    );
  };

  const toggleCategory = (category) => {
    setOpenCategories((prev) =>
      prev.includes(category)
        ? prev.filter((cat) => cat !== category)
        : [...prev, category]
    );
  };

  return (
    <>
      <button
        className={`cs_drawer_btn cs_accent_bg ${!variant ? "cs_type_1" : ""} ${
          showSidebar ? "active" : ""
        }`}
        onClick={() => setShowSidebar(!showSidebar)}
      >
        <svg
          width={17}
          height={32}
          viewBox="0 0 17 32"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M17 15.5833C17 15.221 16.8615 14.8584 16.5849 14.5818L2.41833 0.41517C1.86477 -0.13839 0.968375 -0.13839 0.41517 0.41517C-0.138036 0.968729 -0.13839 1.86512 0.41517 2.41833L13.5802 15.5833L0.41517 28.7484C-0.13839 29.3019 -0.13839 30.1983 0.41517 30.7515C0.968729 31.3047 1.86512 31.3051 2.41833 30.7515L16.5849 16.5849C16.8615 16.3083 17 15.9457 17 15.5833Z"
            fill="white"
          />
        </svg>
      </button>
      <div
        className={`${
          variant === "style-1"
            ? "cs_overlay_filter_widgets"
            : "cs_products_with_sidebar"
        } ${showSidebar ? "active" : ""}`}
        style={{
          display: variant !== "style-1" ? "block" : "",
          height: variant === "style-1" ? "100%" : "",
        }}
      >
        <div
          className="cs_overlay_filter"
          onClick={() => setShowSidebar(!showSidebar)}
        />
        <div
          className={`cs_filter_widgets ${bgColor ? "cs_accent_light_bg" : ""}`}
          style={{ height: "100%" }}
        >
          {variant === "style-1" && (
            <div className="cs_drower_logo">
              <img src={data.logo} alt="Logo" />
            </div>
          )}
          <div className="cs_filter_widget">
            <h3
              className={`cs_filter_widget_title cs_fs_18 cs_normal cs_secondary_font ${
                openCategories.includes("categories") ? "active" : ""
              }`}
              onClick={() => toggleCategory("categories")}
            >
              {variant === "style-1" && (
                <span className="cs_filter_icon">
                  <svg
                    width={20}
                    height={21}
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M7.30769 0.569977H1.92308C1.41323 0.570588 0.924445 0.773393 0.563931 1.13391C0.203416 1.49442 0.000610714 1.98321 0 2.49305V7.87767C0.000610714 8.38751 0.203416 8.8763 0.563931 9.23681C0.924445 9.59733 1.41323 9.80013 1.92308 9.80075H7.30769C7.81754 9.80013 8.30632 9.59733 8.66684 9.23681C9.02735 8.8763 9.23016 8.38751 9.23077 7.87767V2.49305C9.23016 1.98321 9.02735 1.49442 8.66684 1.13391C8.30632 0.773393 7.81754 0.570588 7.30769 0.569977ZM8.46154 7.87767C8.46154 8.18369 8.33997 8.47717 8.12358 8.69356C7.9072 8.90995 7.61371 9.03151 7.30769 9.03151H1.92308C1.61706 9.03151 1.32357 8.90995 1.10718 8.69356C0.890796 8.47717 0.769231 8.18369 0.769231 7.87767V2.49305C0.769231 2.18703 0.890796 1.89355 1.10718 1.67716C1.32357 1.46077 1.61706 1.33921 1.92308 1.33921H7.30769C7.61371 1.33921 7.9072 1.46077 8.12358 1.67716C8.33997 1.89355 8.46154 2.18703 8.46154 2.49305V7.87767ZM18.0769 0.569977H12.6923C12.1825 0.570588 11.6937 0.773393 11.3332 1.13391C10.9726 1.49442 10.7698 1.98321 10.7692 2.49305V7.87767C10.7698 8.38751 10.9726 8.8763 11.3332 9.23681C11.6937 9.59733 12.1825 9.80013 12.6923 9.80075H18.0769C18.5868 9.80013 19.0756 9.59733 19.4361 9.23681C19.7966 8.8763 19.9994 8.38751 20 7.87767V2.49305C19.9994 1.98321 19.7966 1.49442 19.4361 1.13391C19.0756 0.773393 18.5868 0.570588 18.0769 0.569977ZM19.2308 7.87767C19.2308 8.18369 19.1092 8.47717 18.8928 8.69356C18.6764 8.90995 18.3829 9.03151 18.0769 9.03151H12.6923C12.3863 9.03151 12.0928 8.90995 11.8764 8.69356C11.66 8.47717 11.5385 8.18369 11.5385 7.87767V2.49305C11.5385 2.18703 11.66 1.89355 11.8764 1.67716C12.0928 1.46077 12.3863 1.33921 12.6923 1.33921H18.0769C18.3829 1.33921 18.6764 1.46077 18.8928 1.67716C19.1092 1.89355 19.2308 2.18703 19.2308 2.49305V7.87767ZM7.30769 11.3392H1.92308C1.41323 11.3398 0.924445 11.5426 0.563931 11.9031C0.203416 12.2637 0.000610714 12.7524 0 13.2623V18.6469C0.000610714 19.1567 0.203416 19.6455 0.563931 20.006C0.924445 20.3666 1.41323 20.5694 1.92308 20.57H7.30769C7.81754 20.5694 8.30632 20.3666 8.66684 20.006C9.02735 19.6455 9.23016 19.1567 9.23077 18.6469V13.2623C9.23016 12.7524 9.02735 12.2637 8.66684 11.9031C8.30632 11.5426 7.81754 11.3398 7.30769 11.3392ZM8.46154 18.6469C8.46154 18.9529 8.33997 19.2464 8.12358 19.4628C7.9072 19.6792 7.61371 19.8007 7.30769 19.8007H1.92308C1.61706 19.8007 1.32357 19.6792 1.10718 19.4628C0.890796 19.2464 0.769231 18.9529 0.769231 18.6469V13.2623C0.769231 12.9563 0.890796 12.6628 1.10718 12.4464C1.32357 12.23 1.61706 12.1084 1.92308 12.1084H7.30769C7.61371 12.1084 7.9072 12.23 8.12358 12.4464C8.33997 12.6628 8.46154 12.9563 8.46154 13.2623V18.6469ZM15.3846 11.3392C14.4718 11.3392 13.5794 11.6099 12.8204 12.117C12.0614 12.6242 11.4699 13.345 11.1206 14.1884C10.7712 15.0317 10.6798 15.9597 10.8579 16.855C11.036 17.7503 11.4756 18.5727 12.121 19.2182C12.7665 19.8636 13.5889 20.3032 14.4842 20.4813C15.3795 20.6594 16.3075 20.568 17.1508 20.2186C17.9942 19.8693 18.715 19.2778 19.2222 18.5188C19.7293 17.7598 20 16.8674 20 15.9546C19.9987 14.7309 19.512 13.5577 18.6467 12.6925C17.7815 11.8272 16.6083 11.3405 15.3846 11.3392ZM15.3846 19.8007C14.6239 19.8007 13.8803 19.5752 13.2478 19.1525C12.6153 18.7299 12.1223 18.1292 11.8312 17.4264C11.5401 16.7237 11.464 15.9503 11.6124 15.2042C11.7608 14.4582 12.1271 13.7728 12.665 13.2349C13.2029 12.6971 13.8882 12.3307 14.6343 12.1823C15.3803 12.0339 16.1537 12.1101 16.8565 12.4012C17.5593 12.6923 18.16 13.1853 18.5826 13.8178C19.0052 14.4503 19.2308 15.1939 19.2308 15.9546C19.2297 16.9743 18.8241 17.9519 18.103 18.673C17.382 19.394 16.4043 19.7996 15.3846 19.8007Z"
                      fill="#E61F7F"
                    />
                  </svg>
                </span>
              )}
              {data.firstLabel}
              <svg
                width={9}
                height={5}
                viewBox="0 0 9 5"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M0.434142 5H8.56588C8.95069 5 9.14672 4.52889 8.87082 4.24917L4.80495 0.126978C4.63796 -0.042326 4.36206 -0.042326 4.195 0.126978L0.129129 4.24917C-0.146696 4.52889 0.0493364 5 0.434142 5Z"
                  fill="currentColor"
                />
              </svg>
            </h3>
            {!openCategories.includes("categories") && (
              <div className="cs_filter_widget_content">
                <ul className="cs_filter_widget_list cs_mp_0">
                  {data.categories.map((skinType, index) => (
                    <li key={index}>
                      <div className="cs_custom_checkbox">
                        <input
                          type="checkbox"
                          checked={selectedCategories.includes(skinType)}
                          onChange={() => handleCheckboxChange(skinType)}
                        />
                        <span>{skinType}</span>
                      </div>
                    </li>
                  ))}
                </ul>
                <span className="cs_more_widget_btn cs_semibold">
                  {data.BottomText}
                </span>
              </div>
            )}
          </div>
          <div className="cs_filter_widget">
            <h3
              className={`cs_filter_widget_title cs_fs_18 cs_normal cs_secondary_font ${
                openCategories.includes("beautyBrands") ? "active" : ""
              }`}
              onClick={() => toggleCategory("beautyBrands")}
            >
              {variant === "style-1" && (
                <span className="cs_filter_icon">
                  <svg
                    width={20}
                    height={20}
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M19.8468 15.3215L16.7017 12.1928L17.3224 11.7442C17.9299 11.3053 18.1822 10.533 17.9502 9.82259L17.5263 8.52516C17.4815 8.38803 17.4815 8.24304 17.5263 8.10596L17.9502 6.80848C18.1822 6.0981 17.9299 5.32581 17.3224 4.88688L16.2128 4.08493C16.0955 4.00019 16.0098 3.88293 15.9651 3.74579L15.5412 2.44832C15.3091 1.73798 14.6487 1.26067 13.8978 1.26067H12.5261C12.3812 1.26067 12.2426 1.21587 12.1253 1.13113L11.0157 0.329233C10.4082 -0.109744 9.59185 -0.109744 8.98429 0.329233L7.87461 1.13118C7.75735 1.21593 7.61874 1.26072 7.47381 1.26072H6.10219C5.35126 1.26072 4.69082 1.73798 4.45875 2.44837L4.03488 3.74589C3.99011 3.88293 3.90444 4.00019 3.78717 4.08499L2.67754 4.88688C2.07004 5.32591 1.81777 6.09815 2.04979 6.80848L2.47366 8.10596C2.51844 8.24304 2.51844 8.38803 2.47366 8.52511L2.04979 9.82264C1.81777 10.533 2.07004 11.3053 2.67754 11.7442L3.29823 12.1928L0.153152 15.3214C0.028355 15.4456 -0.0250473 15.624 0.0110947 15.7958C0.0472367 15.9677 0.168111 16.1098 0.332502 16.1738L2.85852 17.1568L3.84685 19.6693C3.91113 19.8328 4.05402 19.953 4.22684 19.989C4.26246 19.9964 4.29834 20 4.33395 20C4.4712 20 4.60468 19.9462 4.7038 19.8476L8.5701 16.0025L8.98429 16.3018C9.28807 16.5213 9.644 16.631 9.99998 16.631C10.3559 16.631 10.7119 16.5213 11.0157 16.3018L11.4299 16.0024L15.2963 19.8476C15.3954 19.9462 15.5288 20 15.6661 20C15.7017 20 15.7375 19.9964 15.7732 19.989C15.946 19.953 16.0888 19.8328 16.1532 19.6693L17.1415 17.1568L19.6675 16.1738C19.8319 16.1098 19.9527 15.9677 19.9889 15.7958C20.0251 15.624 19.9716 15.4456 19.8468 15.3215ZM4.52962 18.5495L3.7493 16.5658C3.69616 16.4306 3.58868 16.3237 3.45279 16.2708L1.45839 15.4947L4.04634 12.9202L4.4588 14.1828C4.69088 14.8931 5.35126 15.3704 6.10224 15.3704H7.47386C7.54855 15.3704 7.62151 15.3825 7.69076 15.4056L4.52962 18.5495ZM9.59912 15.4601L8.48949 14.6581C8.1923 14.4434 7.84114 14.3299 7.47386 14.3299H6.10224C5.80589 14.3299 5.54526 14.1416 5.45373 13.8612L5.02986 12.5638C4.92143 12.2318 4.71755 11.9466 4.44045 11.7345C4.43093 11.7263 4.42109 11.7188 4.41116 11.7115C4.40807 11.7092 4.40524 11.7067 4.40211 11.7044L3.29248 10.9025C3.05277 10.7293 2.95319 10.4245 3.04477 10.1442L3.46864 8.84672C3.58214 8.49926 3.58214 8.13197 3.46864 7.7845L3.04477 6.48708C2.95319 6.20672 3.05277 5.90197 3.29248 5.72868L4.40211 4.92678C4.69935 4.71198 4.91641 4.41482 5.02986 4.06745L5.45373 2.76998C5.54526 2.48962 5.80594 2.3013 6.10224 2.3013H7.47386C7.84119 2.3013 8.19241 2.18778 8.48955 1.97303L9.59912 1.17119C9.83888 0.997947 10.1612 0.997895 10.4008 1.17119L11.5105 1.97313C11.8076 2.18789 12.1588 2.3014 12.5261 2.3014H13.8978C14.1941 2.3014 14.4547 2.48978 14.5463 2.77008L14.9701 4.06751C15.0836 4.41497 15.3007 4.71213 15.5979 4.92689L16.7076 5.72883C16.9473 5.90207 17.0468 6.20683 16.9552 6.48718L16.5314 7.78471C16.4179 8.13212 16.4179 8.49941 16.5314 8.84688L16.9552 10.1444C17.0468 10.4247 16.9473 10.7294 16.7075 10.9027L15.598 11.7045C15.5941 11.7074 15.5906 11.7105 15.5867 11.7133C15.5779 11.7199 15.5691 11.7266 15.5606 11.7338C15.283 11.946 15.0787 12.2315 14.9701 12.5639L14.5463 13.8614C14.4547 14.1418 14.1941 14.3301 13.8978 14.3301H12.5261C12.1589 14.3301 11.8077 14.4436 11.5105 14.6584L10.4009 15.4602C10.161 15.6334 9.83883 15.6332 9.59912 15.4601ZM16.5472 16.2708C16.4113 16.3237 16.3039 16.4306 16.2507 16.5658L15.4704 18.5495L12.3092 15.4057C12.3784 15.3825 12.4514 15.3705 12.5261 15.3705H13.8978C14.6486 15.3705 15.3091 14.8932 15.5411 14.1829L15.9536 12.9202L18.5417 15.4947L16.5472 16.2708Z"
                      fill="#E61F7F"
                    />
                    <path
                      d="M12.4185 12.1742C12.5269 12.1742 12.6349 12.1406 12.726 12.0748C12.887 11.9584 12.9677 11.7612 12.9341 11.566L12.5186 9.15641L14.2787 7.44993C14.4213 7.3117 14.4725 7.10496 14.411 6.91663C14.3494 6.72831 14.1858 6.59107 13.9888 6.56256L11.5564 6.21098L10.4686 4.01865C10.3805 3.84109 10.1987 3.72867 9.99954 3.72867C9.80042 3.72867 9.61861 3.84109 9.53053 4.01865L8.44277 6.21098L6.01038 6.56256C5.81335 6.59102 5.64969 6.72831 5.58813 6.91663C5.52657 7.10496 5.57793 7.3117 5.72051 7.44993L7.48059 9.15641L7.06508 11.566C7.0314 11.7612 7.11205 11.9584 7.27315 12.0748C7.43419 12.1912 7.64775 12.2065 7.82396 12.1144L9.99954 10.9768L12.1752 12.1144C12.2517 12.1544 12.3352 12.1742 12.4185 12.1742ZM10.2429 9.92855C10.1667 9.8887 10.0831 9.86883 9.99954 9.86883C9.91596 9.86883 9.83232 9.88875 9.75617 9.92855L8.27524 10.703L8.5581 9.06272C8.58723 8.89395 8.53095 8.72176 8.40767 8.6022L7.2096 7.44062L8.86533 7.20126C9.03568 7.17665 9.18297 7.07021 9.25912 6.91669L9.99954 5.42444L10.74 6.91674C10.8162 7.07026 10.9634 7.1767 11.1337 7.20131L12.7895 7.44067L11.5914 8.60226C11.4682 8.72176 11.4119 8.89395 11.441 9.06277L11.7238 10.703L10.2429 9.92855Z"
                      fill="#E61F7F"
                    />
                  </svg>
                </span>
              )}
              {data.secLabel}
              <svg
                width={9}
                height={5}
                viewBox="0 0 9 5"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M0.434142 5H8.56588C8.95069 5 9.14672 4.52889 8.87082 4.24917L4.80495 0.126978C4.63796 -0.042326 4.36206 -0.042326 4.195 0.126978L0.129129 4.24917C-0.146696 4.52889 0.0493364 5 0.434142 5Z"
                  fill="currentColor"
                />
              </svg>
            </h3>
            {!openCategories.includes("beautyBrands") && (
              <div className="cs_filter_widget_content">
                <ul className="cs_filter_widget_list cs_mp_0">
                  {data.beautyBrands.map((skinType, index) => (
                    <li key={index}>
                      <div className="cs_custom_checkbox">
                        <input
                          type="checkbox"
                          checked={selectedCategories.includes(skinType)}
                          onChange={() => handleCheckboxChange(skinType)}
                        />
                        <span>{skinType}</span>
                      </div>
                    </li>
                  ))}
                </ul>
                <span className="cs_more_widget_btn cs_semibold">
                  {data.BottomText}
                </span>
              </div>
            )}
          </div>

          <div className="cs_filter_widget">
            <h3
              className={`cs_filter_widget_title cs_fs_18 cs_normal cs_secondary_font ${
                openCategories.includes("priceRanges") ? "active" : ""
              }`}
              onClick={() => toggleCategory("priceRanges")}
            >
              {variant === "style-1" && (
                <span className="cs_filter_icon">
                  <svg
                    width={20}
                    height={20}
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10 0C4.48598 0 0 4.48598 0 10C0 12.2826 0.789219 14.515 2.22234 16.2861C2.36129 16.4578 2.61324 16.4844 2.78488 16.3454C2.9566 16.2064 2.98316 15.9546 2.84418 15.7828C1.52598 14.1538 0.8 12.1 0.8 10C0.8 4.92711 4.92711 0.8 10 0.8C15.0729 0.8 19.2 4.92711 19.2 10C19.2 15.0729 15.0729 19.2 10 19.2C7.9 19.2 5.84637 18.474 4.21727 17.1558C4.04555 17.017 3.79375 17.0434 3.65473 17.2152C3.51578 17.3869 3.54234 17.6388 3.7141 17.7778C5.48508 19.2108 7.71742 20 10 20C15.514 20 20 15.514 20 10C20 4.48598 15.514 0 10 0Z"
                      fill="#E61F7F"
                    />
                    <path
                      d="M14.0706 4.37231C14.1897 4.1863 14.1355 3.93887 13.9495 3.81977C12.7711 3.06544 11.4056 2.66669 10.0003 2.66669C5.95668 2.66669 2.66699 5.95637 2.66699 10C2.66699 14.0436 5.95668 17.3333 10.0003 17.3333C14.0439 17.3333 17.3336 14.0436 17.3336 10C17.3336 8.29024 16.7325 6.62587 15.6409 5.31348C15.4996 5.1436 15.2475 5.12048 15.0776 5.26177C14.9077 5.40298 14.8846 5.6552 15.0259 5.82509C15.9982 6.99411 16.5336 8.47677 16.5336 10C16.5336 13.6025 13.6028 16.5333 10.0003 16.5333C6.39781 16.5333 3.46699 13.6025 3.46699 10C3.46699 6.39751 6.39781 3.46669 10.0003 3.46669C11.2524 3.46669 12.4688 3.82177 13.5181 4.49356C13.7041 4.61266 13.9514 4.55844 14.0706 4.37231Z"
                      fill="#E61F7F"
                    />
                    <path
                      d="M11.2 8.39999C11.2 8.62089 11.3791 8.79999 11.6 8.79999C11.8209 8.79999 12 8.62089 12 8.39999C12 7.43413 11.3118 6.62609 10.4 6.44027V5.73331C10.4 5.51241 10.2209 5.33331 10 5.33331C9.7791 5.33331 9.6 5.51241 9.6 5.73331V6.44027C8.6882 6.62609 8 7.43413 8 8.39999C8 9.36585 8.6882 10.1739 9.6 10.3597V12.7312C9.13445 12.5661 8.8 12.1215 8.8 11.6C8.8 11.3791 8.6209 11.2 8.4 11.2C8.1791 11.2 8 11.3791 8 11.6C8 12.5659 8.6882 13.3739 9.6 13.5597V14.2667C9.6 14.4876 9.7791 14.6667 10 14.6667C10.2209 14.6667 10.4 14.4876 10.4 14.2667V13.5597C11.3118 13.3739 12 12.5659 12 11.6C12 10.6341 11.3118 9.82609 10.4 9.64027V7.26878C10.8655 7.4339 11.2 7.87851 11.2 8.39999ZM9.6 9.5312C9.13445 9.36609 8.8 8.92148 8.8 8.39999C8.8 7.87851 9.13445 7.4339 9.6 7.26878V9.5312ZM11.2 11.6C11.2 12.1215 10.8655 12.5661 10.4 12.7312V10.4688C10.8655 10.6339 11.2 11.0785 11.2 11.6Z"
                      fill="#E61F7F"
                    />
                  </svg>
                </span>
              )}
              {data.thirdLabel}
              <svg
                width={9}
                height={5}
                viewBox="0 0 9 5"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M0.434142 5H8.56588C8.95069 5 9.14672 4.52889 8.87082 4.24917L4.80495 0.126978C4.63796 -0.042326 4.36206 -0.042326 4.195 0.126978L0.129129 4.24917C-0.146696 4.52889 0.0493364 5 0.434142 5Z"
                  fill="currentColor"
                />
              </svg>
            </h3>
            {!openCategories.includes("priceRanges") && (
              <div className="cs_filter_widget_content">
                {variant === "style-1" ? (
                  <>
                    {" "}
                    <ul className="cs_filter_widget_list cs_mp_0">
                      {data.priceRanges.map((price, index) => (
                        <li key={index}>
                          <div className="cs_custom_checkbox">
                            <input
                              type="checkbox"
                              checked={selectedCategories.includes(price)}
                              onChange={() => handleCheckboxChange(price)}
                            />
                            <span>{price}</span>
                          </div>
                        </li>
                      ))}
                    </ul>
                  </>
                ) : (
                  <>
                    <div className="cs_price_range cs_light">
                      <div className="cs_price_range_in">
                        <div className="cs_price_range_left">
                          <span>{data.priceRanges.minLabel}</span>
                          <input
                            type="text"
                            placeholder={data.priceRanges.minPlaceholder}
                          />
                        </div>
                        <div className="cs_price_range_right">
                          <span>{data.priceRanges.maxLabel}</span>
                          <input
                            type="text"
                            placeholder={data.priceRanges.maxPlaceholder}
                          />
                        </div>
                      </div>
                      <button className="cs_btn cs_style_1 cs_medium cs_size_md w-100">
                        <span>{data.priceRanges.buttonText}</span>
                      </button>
                    </div>
                  </>
                )}
              </div>
            )}
          </div>
          <div className="cs_filter_widget">
            <h3
              className={`cs_filter_widget_title cs_fs_18 cs_normal cs_secondary_font ${
                openCategories.includes("ratings") ? "active" : ""
              }`}
              onClick={() => toggleCategory("ratings")}
            >
              {variant === "style-1" && (
                <span className="cs_filter_icon">
                  <svg
                    width={20}
                    height={20}
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M4.47642 20C4.2573 20 4.0397 19.9287 3.854 19.7885C3.50807 19.5269 3.34648 19.0773 3.44063 18.6434L4.72728 12.7292L0.36377 8.73605C0.0430226 8.44386 -0.0795084 7.98115 0.0521782 7.55776C0.183865 7.13517 0.54215 6.83598 0.966355 6.79506L6.73981 6.24811L9.02243 0.674012C9.19074 0.264478 9.57405 0 9.99993 0C10.4258 0 10.8091 0.264478 10.9774 0.673057L13.2601 6.24811L19.0326 6.79506C19.4577 6.83502 19.816 7.13517 19.9477 7.55776C20.0794 7.98035 19.9576 8.44386 19.6369 8.73605L15.2733 12.7284L16.56 18.6424C16.6543 19.0773 16.4926 19.5269 16.1468 19.7877C15.8018 20.0486 15.3417 20.0686 14.9784 19.8408L9.99993 16.7363L5.02148 19.8425C4.85317 19.9468 4.66563 20 4.47642 20ZM9.99993 15.3989C10.1891 15.3989 10.3765 15.452 10.545 15.5563L15.2434 18.4886L14.0291 12.9065C13.9424 12.5093 14.0717 12.0945 14.3659 11.8257L18.486 8.05519L13.035 7.53865C12.6425 7.50123 12.305 7.24376 12.1516 6.86639L9.99993 1.60613L7.84564 6.86719C7.69397 7.24201 7.35643 7.49948 6.96488 7.5369L1.51309 8.05344L5.63306 11.824C5.92818 12.0935 6.05727 12.5075 5.96983 12.9058L4.75643 18.4877L9.45487 15.5563C9.62318 15.452 9.81072 15.3989 9.99993 15.3989ZM6.69571 6.35591C6.69571 6.35591 6.69571 6.35686 6.6948 6.35766L6.69571 6.35591ZM13.3025 6.35336L13.3034 6.35511C13.3034 6.35416 13.3034 6.35416 13.3025 6.35336Z"
                      fill="#E61F7F"
                    />
                  </svg>
                </span>
              )}
              {data.fourLabel}
              <svg
                width={9}
                height={5}
                viewBox="0 0 9 5"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M0.434142 5H8.56588C8.95069 5 9.14672 4.52889 8.87082 4.24917L4.80495 0.126978C4.63796 -0.042326 4.36206 -0.042326 4.195 0.126978L0.129129 4.24917C-0.146696 4.52889 0.0493364 5 0.434142 5Z"
                  fill="currentColor"
                />
              </svg>
            </h3>
            {!openCategories.includes("ratings") && (
              <div className="cs_filter_widget_content">
                <ul className="cs_filter_widget_list cs_mp_0">
                  {data.ratings.map((rating, index) => (
                    <li key={index}>
                      <div className="cs_custom_checkbox">
                        <input
                          type="checkbox"
                          checked={selectedCategories.includes(rating)}
                          onChange={() => handleCheckboxChange(rating)}
                        />

                        <span> {<Review reviewNumber={rating} />}</span>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
          <div className="cs_filter_widget">
            <h3
              className={`cs_filter_widget_title cs_fs_18 cs_normal cs_secondary_font ${
                openCategories.includes("skinTypes") ? "active" : ""
              }`}
              onClick={() => toggleCategory("skinTypes")}
            >
              {variant === "style-1" && (
                <span className="cs_filter_icon">
                  <svg
                    width={20}
                    height={20}
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5 0C5.30682 0 5.55556 0.248733 5.55556 0.555556C5.55556 0.862378 5.30682 1.11111 5 1.11111H2.77778C1.8573 1.11111 1.11111 1.8573 1.11111 2.77778V5.03459C1.11111 5.34141 0.862378 5.59014 0.555556 5.59014C0.248733 5.59014 0 5.34141 0 5.03459V2.77778C0 1.24366 1.24366 0 2.77778 0H5ZM15 1.11111C14.6932 1.11111 14.4444 0.862378 14.4444 0.555556C14.4444 0.248733 14.6932 0 15 0H17.2222C18.7563 0 20 1.24366 20 2.77778V5C20 5.30682 19.7512 5.55556 19.4444 5.55556C19.1377 5.55556 18.8889 5.30682 18.8889 5V2.77778C18.8889 1.8573 18.1427 1.11111 17.2222 1.11111H15ZM18.8889 15C18.8889 14.6932 19.1377 14.4444 19.4444 14.4444C19.7512 14.4444 20 14.6932 20 15V17.2222C20 18.7563 18.7563 20 17.2222 20H15C14.6932 20 14.4444 19.7512 14.4444 19.4444C14.4444 19.1377 14.6932 18.8889 15 18.8889H17.2222C18.1427 18.8889 18.8889 18.1427 18.8889 17.2222V15ZM0 15C0 14.6932 0.248733 14.4444 0.555556 14.4444C0.862378 14.4444 1.11111 14.6932 1.11111 15V17.2222C1.11111 18.1427 1.8573 18.8889 2.77778 18.8889H5C5.30682 18.8889 5.55556 19.1377 5.55556 19.4444C5.55556 19.7512 5.30682 20 5 20H2.77778C1.24366 20 0 18.7563 0 17.2222V15ZM5.55556 6.11111C5.55556 5.80429 5.80429 5.55556 6.11111 5.55556C6.41793 5.55556 6.66667 5.80429 6.66667 6.11111V7.22222C6.66667 7.52904 6.41793 7.77778 6.11111 7.77778C5.80429 7.77778 5.55556 7.52904 5.55556 7.22222V6.11111ZM14.4444 6.11111C14.4444 5.80429 14.6932 5.55556 15 5.55556C15.3068 5.55556 15.5556 5.80429 15.5556 6.11111V7.22222C15.5556 7.52904 15.3068 7.77778 15 7.77778C14.6932 7.77778 14.4444 7.52904 14.4444 7.22222V6.11111ZM10 6.11111C10 5.80429 10.2488 5.55556 10.5556 5.55556C10.8623 5.55556 11.1111 5.80429 11.1111 6.11111V10.5556C11.1111 11.476 10.3649 12.2222 9.44444 12.2222C9.13767 12.2222 8.88889 11.9734 8.88889 11.6667C8.88889 11.3599 9.13767 11.1111 9.44444 11.1111C9.75122 11.1111 10 10.8623 10 10.5556V6.11111ZM5.66667 14.2222C5.48257 13.9768 5.53232 13.6286 5.77778 13.4444C6.02323 13.2603 6.37146 13.3101 6.55556 13.5556C7.56774 14.9051 8.706 15.5556 10 15.5556C11.294 15.5556 12.4322 14.9051 13.4444 13.5556C13.6286 13.3101 13.9768 13.2603 14.2222 13.4444C14.4677 13.6286 14.5174 13.9768 14.3333 14.2222C13.1233 15.8356 11.6689 16.6667 10 16.6667C8.33111 16.6667 6.8767 15.8356 5.66667 14.2222Z"
                      fill="#E61F7F"
                    />
                  </svg>
                </span>
              )}
              {data.fiveLabel}
              <svg
                width={9}
                height={5}
                viewBox="0 0 9 5"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M0.434142 5H8.56588C8.95069 5 9.14672 4.52889 8.87082 4.24917L4.80495 0.126978C4.63796 -0.042326 4.36206 -0.042326 4.195 0.126978L0.129129 4.24917C-0.146696 4.52889 0.0493364 5 0.434142 5Z"
                  fill="currentColor"
                />
              </svg>
            </h3>
            {!openCategories.includes("skinTypes") && (
              <div className="cs_filter_widget_content">
                <ul className="cs_filter_widget_list cs_mp_0">
                  {data.skinTypes.map((skinType, index) => (
                    <li key={index}>
                      <div className="cs_custom_checkbox">
                        <input
                          type="checkbox"
                          checked={selectedCategories.includes(skinType)}
                          onChange={() => handleCheckboxChange(skinType)}
                        />
                        <span>{skinType}</span>
                      </div>
                    </li>
                  ))}
                </ul>
                <span className="cs_more_widget_btn cs_semibold">
                  {data.BottomText}
                </span>
              </div>
            )}
          </div>
        </div>
      </div>
      {variant === "style-1" && <Spacing lg={70} md={80} />}
    </>
  );
};

export default Sidebar1;
